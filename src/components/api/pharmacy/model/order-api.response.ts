// unless otherwise specified, interfaces generated from https://git.sys.cigna.com/digital-experience/apis/health-kit/lambda/pharmacy/evna/pharmacy-v1-hex/-/blob/68b5ffe9c9c18564a94c81bea63283ca124ad93a/swagger.yaml

export interface OrderResponse {
  /** Total number of Orders submitted. */
  totalCount?: number;
  /** Indicates if the customer has had an order placed or shipped within the past 100 days. */
  recentOrderAvailable?: boolean;
  summary?: OrderSummary;
  /** list of orders made by date. */
  orders?: Order[];
}

export interface OrderSummary {
  /** List of different filter options for Order History and the count of the orders for that particular filter. */
  filters?: OrderFilters[];
}
export interface OrderFilters {
  /** Represents the filter options for Order History filter. filterLabel can contain the following values , all , last30Days, last3Months, year - a dynamic number representing current year and previous year ex:- 2021 , 2020 etc. */
  filterLabel?: string;
  /** Represents count of orders for each filterLabel. */
  filterCount?: number;
}

export interface Order {
  /** A globally-unique identifier used to reference the order request. This is generated by Express Scripts when the order request is created. It can subsequently be used to retrieve the order request or the current status of the order request. */
  resourceId?: string;
  /** The date when the order was created. */
  creationDate?: string;
  /** Confirmation number of the order posted which unique for each order request. */
  confirmationNumber?: string;
  /** List of items that made in single request. */
  orderItems?: OrderItem[];
}

export interface OrderItem {
  /** A UUID of the order Item. */
  resourceId?: string;
  /** The date when the order was created. */
  creationDate?: string;
  /** Confirmation number of the order posted which unique for each order request. */
  confirmationNumber?: string;
  /** IEID of the patient. */
  patientEnterpriseId?: string;
  /** Prescription number as it appears on the label of the prescription bottle. */
  rxNumber?: string;
  /** The name of the drug. */
  drugName?: string;
  /** The dose of the drug. */
  drugDose?: string;
  /** The form of the drug. */
  drugForm?: string;
  /** The National Drug Code that uniquely identifies the drug in the United States. */
  ndc?: string;
  /** The form of the drug. */
  form?: string;
  /** An identifier of a particular product that allows it to be tracked for inventory purposes. */
  consumerSku?: string;
  /** Prescription number as it appears on the label of the prescription bottle. */
  quantityUnits?: string;
  /** This is the concatination of drugName, strengthAndUnitLabel and drugForm. */
  drugDisplayName?: string;
  /** First name of the patient. */
  firstName?: string;
  /** Last name of the patient. */
  lastName?: string;
  /** Date of birth of the patient. */
  dateOfBirth?: string;
  /** This is concatination of patient firsname with DOB if family members has duplicate first name other map with Patient's first name. And this field created for display in mobile app. */
  patientDisplayName?: string;
  /** The number of units of the prescribed item to be dispensed in the order. */
  quantity?: number;
  /** The number of days the prescription is intended to cover. */
  daysSupply?: number;
  /** Invoice number of the prescription ordered. */
  invoiceNumber?: string;
  /** Final net amount that the customer is obligated to pay for the prescription in the order. */
  price?: number;
  /** Plan benefit  amount  of the order at each level of processing.. */
  benefitAmount?: number;
  /** eVoucher duscount amount applied for the prescription in the order. */
  couponSavings?: number;
  /** Original price of the prescription before the coupon savings are applied. */
  originalPrice?: number;
  /** Status of the prescription. */
  orderStatus?: OrderStatus;
  prescriber?: OrderPrescriber;
  trackingDetail?: OrderTrackingDetail;
  shippingAddress?: OrderAddress;
}

export interface OrderStatus {
  /** The status code. */
  code?: string;
  /** The name of the status itself for the order. */
  status?: string;
  /** This is concatination of status and status code values, which will be used as CDN key. */
  statusCodeKey?: string;
}

export interface OrderPrescriber {
  /** A globally-unique identifier used to reference the practitioner who has or will prescribe the medication. */
  resourceId?: string;
  /** A prefix for addressing the prescriber. */
  prefix?: string;
  /** First name of the Prescriber. */
  firstName?: string;
  /** Last name of the Prescriber. */
  lastName?: string;
  /** Generational suffix for the prescriber's name. */
  generationalSuffix?: string;
  /** Professional suffix for the prescriber's professional suffixes. */
  professionalSuffixes?: string;
  /** Full name of the prescriber, First name, Last name with professional suffixes. */
  displayName?: string;
  /** Postal Address relativeId of the Prescriber. */
  postalAddressRelativeId?: string;
  /** A globally-unique identifier used to reference the phone number where the practitioner can be contacted. This is provided by Express Scripts. */
  phoneNumberRelativeId?: string;
  address?: OrderAddress;
}

export interface OrderTrackingDetail {
  /** The name of the carrier who is delivering the product. */
  carrierName?: string;
  /** The type of delivery. If this is not specified, the default is 'Standard'. */
  deliveryType?: 'Standard' | 'Two Day' | 'Overnight PM';
  /** The date and time when the product was shipped. This may represent the date and time the product was placed on a truck or on the dock to get to load on a truck; i.e., it may not necessarily represent the exact time the truck drove away from the dock. */
  shipmentDateTime?: string;
  /** A unique number that the patient can use to track where their product is in the delivery process. */
  trackingNumber?: string;
  /** A link to track the shipment progress. */
  trackingUrl?: string;
}

export interface OrderAddress {
  /** A unique identifier to identify this particular postal address. */
  relativeId?: string;
  /** The first line of the street address, typically containing the building number and street name. */
  streetAddress1?: string;
  /** The optional second line of the street address, often containing information about the location within a building, such as suite, PO box, or apartment number. */
  streetAddress2?: string;
  /** The name of the city in which the street address is located. */
  city?: string;
  /** The code use to identify the state or province in which the city is located. In the US, this will be a 2-character code, such as "NY", "MO", "NJ", "CA", etc. */
  stateCode?: string;
  countryCode?: string;
  /** The postal code (aka 'zip code' in US) used to uniquely identify the area where the address is located. In the US, the postal code can be 5 digits, or 9 digits(first 5 separated from last 4 by a hyphen). */
  postalCode?: string;
}
